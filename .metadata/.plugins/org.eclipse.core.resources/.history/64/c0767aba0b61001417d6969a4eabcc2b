package dev.bottle.mining;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.JFrame;

public class Game extends Canvas implements Runnable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	volatile boolean running = true;
	
	final int size = 320;
	
	final int scale = 3;
	
	BufferedImage image = new BufferedImage(size,(size/4)*3,BufferedImage.TYPE_INT_ARGB);
	BufferedImage tiles;
	
	public static void main(String[] args)
	{
		Thread t;
		try {
			t = new Thread(new Game());
			t.start();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public Game() throws IOException
	{
		this.tiles=ImageIO.read(new File("res/tiles.png"));
		JFrame frame = new JFrame("Mining Game");
		this.setBackground(new Color(127,201,255));
		frame.add(this);
		frame.pack();
		frame.setSize(size*scale,(size/4)*3*scale);
		frame.validate();
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setResizable(false);
		frame.setVisible(true);
	}

	@Override
	public void run() {
		
		while(running)
		{
			this.repaint();
		}
		
	}
	
	public void paint(Graphics2D g)
	{
		g.drawImage(this.tiles,0,0,null);
	}
	
	@Override
	public void update(Graphics g)
	{
		paint(image.createGraphics());
		g.drawImage(image,0,0,size*scale,(size/4)*3*scale,null);
	}
	
}
